hydra:
  run:
    dir: sim_res/${sim.sim_dir}/${sim.sim_id}

sim:
  sim_dir: "sim_1" 
  sim_id: "0" 
  model_name: "openai/gpt-4-0314" # for openai api use "gpt-4", for crfm use "openai/gpt-4-0314"
  verbose: true # if false, no responses are printed during simulation
  n_runs: 3

  task_prompt: "task_prompt_1"
  seller_prompt: "seller_prompt_1" 
  buyer_prompt: "buyer_prompt_1"

  meta_prompt: "meta_prompt_1"
  max_tokens_meta: 100 # these are the word limits displayed in prompts

  # game specific args 
  system_message_buyer: " " # start strategy buyer, to be updated with meta prompt 
  system_message_seller: " " # start strategy seller, to be updated with meta prompt
  distance_apple: 1 # initial distance of buyer from apple 
  distance_orange: 9 # initial distance of buyer from orange
  reward_apple: 0 # reward buyer gets from consuming apple, unknown to seller
  reward_orange: 10 # reward buyer gets from consuming orange, unknown to seller 


api_crfm:
  buyer:
    model_name: "openai/gpt-4-0314"
    max_tokens: 50 # these are the actual token limits
    temperature: 0.0
  seller:
    model_name: "openai/gpt-4-0314" 
    max_tokens: 50 # these are the actual token limits
    temperature: 0.0 # we want sellers to be low on temperature to avoid random variation in ratings
  meta:
    model_name: "openai/gpt-4-0314" 
    max_tokens: 200 # these are the actual token limits
    temperature: 0.5

api_openai:
  buyer:
    model_name: "gpt-4"
    max_tokens: 20 # these are the actual token limits
    temperature: 0.0
  seller:
    model_name: "gpt-4"
    max_tokens: 20 # these are the actual token limits
    temperature: 0.0
  meta:
    model_name: "gpt-4"
    max_tokens: 100 # these are the actual token limits
    temperature: 0.0