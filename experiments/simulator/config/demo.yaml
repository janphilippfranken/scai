hydra:
  run:
    dir: sim_res/${sim.context_id}
  # job:
    # env_set: 
      # CUDA_VISIBLE_DEVICES: "0,1" 

# sim arguments
sim:
  system_k: 5
  chat_k: 5
  user_k: 2
  assistant_k: 2
  assistant_system_k: 1
  context_id: "context_1"
  context_name: "context_1"
  verbose: false # if false, we will use tokens!
  system_message: " "
  n_runs: 5
  model: "gpt-3.5-turbo" # "openai/gpt-4-0314"
  task_prompt: "task_prompt_1"
  n_user: 2
  n_assistant: 2
  user_prompts: 
    - "user_prompt_1"
    - "user_prompt_2"
  assistant_prompts: 
    - "assistant_prompt_1"
    - "assistant_prompt_1"
  meta_prompt: "meta_prompt_1"

# api arguments crfm
api_crfm:
  assistant:
    model_name: "openai/gpt-4-0314"
    max_tokens: 50
    num_completions: 1 # for crfm chat model
    request_timeout: 10
    verbose: false
    temperature: 0.5
  user:
    model_name: "openai/gpt-4-0314" 
    max_tokens: 50
    num_completions: 1 
    request_timeout: 10
    verbose: false
    temperature: 0.5
  meta:
    model_name: "openai/gpt-4-0314" 
    max_tokens: 200
    num_completions: 1 
    request_timeout: 10
    verbose: false
    temperature: 0.5

# api arguments openai
api_openai:
  assistant:
    model_name: "gpt-3.5-turbo"
    max_tokens: 50
    n: 1
    request_timeout: 10
    verbose: false
    temperature: 0.5
  user:
    model_name: "gpt-3.5-turbo"
    max_tokens: 50
    n: 1 
    request_timeout: 10
    verbose: false
    temperature: 0.5
  meta:
    model_name: "gpt-3.5-turbo"
    max_tokens: 200
    n: 1 
    request_timeout: 10
    verbose: false
    temperature: 0.5